blogdown:::serve_site()
setwd("~/Google Drive/lab/website/academic-kickstart")
blogdown:::serve_site()
substr("B-HC-D-o1B", 3, 9)
substr("B-HC-D-o1B", start = 3, start = 9)
substr("B-HC-D-o1B", start = 3, stop = 9)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
pkgdown:::build_site_external()
blogdown:::serve_site()
setwd("~/Google Drive/Personal/training/Victors/VictorsTracks")
library(maptools)
install.packages("rgeos")
tracks = getKMLcoordinates(kmlfile = unzip(zipfile = paste0("tracks Guelph.kmz"),
exdir = "KML"),
ignoreAltitude = T)[[1]]
unzip(zipfile = paste0("tracks Guelph.kmz"),
exdir = "KML")
getKMLcoordinates(kmlfile = unzip(zipfile = paste0("tracks Guelph.kmz"),
exdir = "KML"),
ignoreAltitude = T)
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T)[[1]]
tracks
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T)
tracks
install.packages("sf")
library(tidyverse)
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% map_df()
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% map_df(~ .x)
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% map(~ .x)
tracks
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% map_dfr(~ .x)
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% bind_rows()
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% map_dfr(as.list)
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% as.data.frame(do.call(rbind, .))
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>% do.call(rbind, .)
tracks
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>%
do.call(rbind, .) %>%
as.tibble()
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>%
do.call(rbind, .) %>%
as_tibble()
tracks
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>%
do.call(rbind, .) %>%
as_tibble() %>%
rename(V1 = "Long", V2 = "Lat")
tracks = getKMLcoordinates(kmlfile = "KML/doc.kml",
ignoreAltitude = T) %>%
do.call(rbind, .) %>%
as_tibble() %>%
rename(Long = V1, Lat = V2)
tracks
View(tracks)
library(sf)
tracks = st_read("KML/doc.kml")
tracks
plot(tracks)
map(tracks)
mapview(tracks)
library(mapview)
install.packages("mapview")
library(mapview)
mapview(tracks)
buf = rgeos::gBuffer(tracks, FALSE, width = 1 )
tracks
buf = st_buffer(tracks, dist = 1)
buf
tracks_m = st_transform(tracks, 2778)
tracks_m
mapview(tracks_m)
buf = st_buffer(tracks_m, dist = 2000)
mapview(buf)
mapview(list(tracks_m, buf)
)
mapview(list(tracks_m, buf), legend = F)
mapview(list(tracks_m, buf), legend = list(T,F))
m_tracks = mapview(tracks_m)
m_buffer = mapview(buf, legend = F)
m_tracks + m_buffer
m_tracks
m_buffer
l_tracks =  addStaticLabels(m_tracks,
label = tracks_m$Name,
labelOptions = lopt)
l_tracks =  addStaticLabels(m_tracks,
label = tracks_m$Name)
m_tracks + l_tracks +  m_buffer
l_tracks
l_tracks +  m_buffer
m_victors = m_tracks + m_buffer
m_victors
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name)
l_tracks
m_tracks = mapview(tracks_m, cex = 1) # create map of points
m_victors = m_tracks + m_buffer
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name)
l_tracks
m_tracks = mapview(tracks_m, cex = 2) # create map of points
m_victors = m_tracks + m_buffer
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name)
l_tracks
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name,
lopt = labelOptions(direction = "top"))
library(leaflet)
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name,
lopt = labelOptions(direction = "top"))
l_tracks
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name,
lopt = labelOptions(direction = "below"))
l_tracks
l_tracks =  addStaticLabels(m_victors,
label = tracks_m$Name,
lopt = labelOptions(direction = "bottom"))
l_tracks
setwd("~/Downloads/rcode")
Shapiro<-read.csv("Shapiro_All.csv")
shapiro.test(Shapiro$Diff_Meth) #normal
shapiro.test(Shapiro$Diff_Meth_EPTC) # normal
shapiro.test(Shapiro$Diff_Ethanol) #normal
shapiro.test(Shapiro$Diff_Tissue) #not normal
shapiro.test(Shapiro$Diff_Ethanol_EPTC) #normal
shapiro.test(Shapiro$Diff_Tissue_EPTC) #not normal
shapiro.test(Shapiro$Diff_C) #not normal
shapiro.test(Shapiro$Diff_ethanol_C) #normal
shapiro.test(Shapiro$Diff_Tissue_C) #not normal
shapiro.test(Shapiro$Diff_EPT) #not normal
shapiro.test(Shapiro$Diff_ethanol_EPT) #normal
shapiro.test(Shapiro$Diff_Tissue_EPT) #normal
shapiro.test(Shapiro$Diff_O) #not normal
shapiro.test(Shapiro$Diff_EthanolO) #normal
shapiro.test(Shapiro$Diff_TissueO) #normal
method<-read.csv("Method.csv")
t.test(method$Ethanol,method$Tissue, paired = TRUE, alternative = "two.sided") #p=0.09563
t.test(method$Ethanol_EPTC,method$Tissue_EPTC, paired = TRUE, alternative = "two.sided") #p=0.03983
wilcox.test(method$Ethanol_C,method$Tissue_C,paired = TRUE, alternative = "two.sided") #p=0.1698
wilcox.test(method$Ethanol_EPT,method$Tissue_EPT,paired = TRUE, alternative = "two.sided") #p=0.2542
wilcox.test(method$Ethanol_O,method$Tissue_O, paired = TRUE, alternative = "two.sided") #p=0.02365
sites<-read.csv(file.choose())
t.test(sites$CA_Ethanol,sites$Farm_Ethanol, alternative = "two.sided") #p=0.2768
t.test(sites$CA_Ethanol_EPTC,sites$Farm_Ethanol_EPTC, alternative = "two.sided") #p=0.9804
t.test(sites$CA_Ethanol_c,sites$Farm_Ethanol_c,alternative = "two.sided") #p=0.892
t.test(sites$CA_Ethanol_EPT,sites$Farm_Ethanol_EPT,alternative = "two.sided") #p=0.4414
(sites$CA_Tissue_EPT,sites$Farm_Tissue_EPT,alternative = "two.sided") #p=0.6122
